SHELL=/bin/sh

LOGFILE=$HOME/.pmlog
LOGABSTRACT="all"
VERBOSE="on"

# try to use dovecot to deliver
#DELIVER="/usr/lib/dovecot/deliver"
# fallback
MAILDIR=$HOME/.maildir/
DEFAULT=$MAILDIR

# Condition scoring
# (mostly taken from <http://perlcode.org/tutorials/procmail/proctut/proctip2.pod> )
# See my section on trash mail for examples on how to use this value, but it's
# designed to facilitate "OR" matching - if a message matches any or all of some
# list of conditions. 
SPR=2147483647

# Marking messages as read: http://raamdev.com/2007/using-procmail-to-mark-as-read/

# Spam bullshit
spaminbox="SPAM"
learnedspam="SPAM.learned"
unexaminedspam="SPAM.unexamined"

# Mails with a score of 10 or higher are almost certainly spam (with 0.05%
# false positives according to rules/STATISTICS.txt). 
# In my experience, I've never seen anything with a spam score of higher than 
# like 2 that wasn't spam. 
# I'm gonna say than anything with a score of 8 or higher is safe to kill.
# We store them in an unprocessed spam directory, marked as read - basically, 
# we never intend to see these spams again
# Also, a bunch of other bullshit I am sick of
:0
* $ $SPR^0 ^X-Spam-Level: \*\*\*\*\*\*\*\*
* $ $SPR^0 ^To:.*vlack\+spam
* $ $SPR^0 ^To:.*vlack\+temp
* $ $SPR^0 ^From:.*Vanessa.*Smith
* $ $SPR^0 ^To:.*vlack\+f\.retailreportcard
* $ $SPR^0 ^To:.*vlack\+f\.campaignforliberty
* $ $SPR^0 .*vlack\+f\.retailreportcard
* $ $SPR^0 .*retailreportcard.*
* $ $SPR^0 ^X-Original-To:.*offers 
* $ $SPR^0 ^From:.*Club.*VIP.*
* $ $SPR^0 ^From:.*RuneScape.*
* $ $SPR^0 ^From:.*e-mail.microsoft.com.*
{
    # Move the message to the folder
    :0c
    .$unexaminedspam/

    # And now mark it as read: 
    :0
    * LASTFOLDER ?? /\/[^/]+$
    { tail=$MATCH }

    TRAP="mv $LASTFOLDER .$unexaminedspam/cur/$tail:2,S"
    HOST
}

# Mails with a score of 5 or higher are also very likely to be spam, but let's 
# save them as unread just to be sure
:0
* ^X-Spam-Level: \*\*\*\*\*
.$spaminbox/

### Random stupid things not to forget:
# 1 close your freaking folders with a "/". it's ".lists.sunhelp-geeks/"
# 2 start with a "*", don't just begin your rule. that is bad bad bad. 
# 3 the "+" must be escaped with a "\", as must all "." characters. 
# 4 don't put comments on the end of lines. a line like 
#       * $ $SPR^0 ^Subject:.*cows   # this matches "cows"
#   will be evaluated much differently than you think.

# All email for api@<postfix_domains> gets its own deal
:0
* ^Delivered-To: api.*
{
    apifolder=api
    # For debugging, copy all email to my api folder first: 
    :0c
    .$apifolder/
    # And now mark it as read: 
    :0
    * LASTFOLDER ?? /\/[^/]+$
    { tail=$MATCH }

    TRAP="mv $LASTFOLDER .$apifolder/cur/$tail:2,S"
    HOST


    # For now, I'm only going to accept mail to api@younix.us...
    # api@anything.else gets nuked
    :0
    * !^Delivered-To: api\@younix\.us
    /dev/null

    # Everything else belongs in the .pmapi rc file
    INCLUDERC=$HOME/.pmapi

    # API email shouldn't go to main mailbox; if it wasn't handled by the
    # .pmapi rc file, just bit bucket that shit
    :0
    /dev/null
}

# Capstone
:0
* ^X-Original-To: .*vlack\+capstone\@vlack\.com
/dev/null
#.Capstone/

# SXSW shit
# Fuckings bands in town
:0
* $ $SPR^0 ^From:.*bandsintown\.com.*
* $ $SPR^0 ^Delivered-To: sxsw\@.*
.SXSW/

:0
* ^Delivered-To: realest\@
.RealEstate/

:0
* ^Delivered-To: consume\@
.Consume/

# Alternative Identities
:0
* $ $SPR^0 ^X-Original-To: isabel\@.*
* $ $SPR^0 ^X-Original-To: httpcoed\@.*
* $ $SPR^0 ^X-Original-To: http_coed\@.*
* $ $SPR^0 ^X-Original-To: httpcoed404\@.*
* $ $SPR^0 ^X-Original-To: unicoed\@.*
* $ $SPR^0 ^X-Original-To: orsoncard\@.*
* $ $SPR^0 ^X-Original-To: verticale\@gmail\.com
{
  # Put the mail in this folder and then mark it read:
  #without leading . or training / and I dunno if this works on subfolders like .Facebook.Bullshit or anything
  foldername=altident
 
  # store the mail in the folder:
  :0c
  .$foldername/ 
 
  # use 'mv' to take the mail from $foldername/new to $foldername/cur, marking the mail read
  :0
  * LASTFOLDER ?? /\/[^/]+$
  { tail=$MATCH }
 
  TRAP="mv $LASTFOLDER .$foldername/cur/$tail:2,S"
  HOST
}

# Facebook agh so many messages
:0
* $ $SPR^0 ^From: .*facebookmail\.com
* $ $SPR^0 ^From: .*twitter\.com
* $ $SPR^0 ^From: .*linkedin\.com
* $ $SPR^0 ^Return-Path: .*linkedin\.com
* $ $SPR^0 ^Subject:.*mailing list memberships reminder
* $ $SPR^0 ^From:.*notifications\@github\.com
* $ $SPR^0 ^From:.*noreply\@github\.com
* $ $SPR^0 ^From:.*bounces\@mail1\.oknotify2\.com
{
  # Put the mail in this folder and then mark it read:
  #without leading . or training / and I dunno if this works on subfolders like .Facebook.Bullshit or anything
  foldername=Notifications
 
  # store the mail in the folder:
  :0c
  .$foldername/ 
 
  # Move the message from new/ to cur/ and set the message flags to mark it read
  :0
  * LASTFOLDER ?? /\/[^/]+$
  { tail=$MATCH }
 
  TRAP="mv $LASTFOLDER .$foldername/cur/$tail:2,S"
  HOST
}

:0
* ^List-Id:.*aha\.spool\.metasploit\.com
.lists.aha/

:0 
* ^List-Id:.*infowarrior\.attrition\.org
.lists.infowarrior/

### The rest of the email will be delivered into my default mailbox,
### so no more rules are necessary