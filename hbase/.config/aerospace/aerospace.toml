# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = ['exec-and-forget open -na "AnyBar"']

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode main',
    'exec-and-forget /opt/homebrew/bin/borders style=round width=12.0 hidpi=on active_color=0xffff8100 inactive_color=0xff666666',
    'exec-and-forget open -a "AnyBar"',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 24
inner.vertical = 24
outer.left = 24
outer.bottom = 24
outer.top = 24
outer.right = 24

#### Modes
#
# Mode design:
#
# - alt is the primary control mode, like vim's normal mode
# - ctrl-f10 always invokes alt mode, whether in main or any of the other modes
# - esc always invokes main mode, no matter what mode you are in
# - enter resize/workspace mode with r/w from alt mode,
#   and return to alt mode with r/w again
#   (or return with esc or ctrl-f10)

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]
ctrl-f10 = [
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode alt',
    'mode alt',
]

# 'alt' binding mode declaration
[mode.alt.binding]
ctrl-f10 = [
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode alt',
    'mode alt',
]
esc = [
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode main',
    'mode main',
]
backtick = [
    'reload-config',
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode main',
    'mode main',
]

slash = 'layout tiles horizontal vertical'
comma = 'layout accordion horizontal vertical'

# # See: https://nikitabobko.github.io/AeroSpace/commands#focus
h = ['focus --boundaries-action stop left', 'move-mouse window-force-center']
j = ['focus --boundaries-action stop down', 'move-mouse window-force-center']
k = ['focus --boundaries-action stop up', 'move-mouse window-force-center']
l = ['focus --boundaries-action stop right', 'move-mouse window-force-center']

opt-w = ['close']

# move: "Move the focused window in the given direction"
# https://nikitabobko.github.io/AeroSpace/commands#move
# Move the window to the directionally adjacent container; if there is something there already, swap
shift-h = 'move left'
shift-j = 'move down'
shift-k = 'move up'
shift-l = 'move right'

# join-with: "Put the focused window and the nearest node in the specified direction under a common parent container"
# https://nikitabobko.github.io/AeroSpace/commands#join-with
# Place the window inside the directionally adjacent container
ctrl-h = ['join-with left']
ctrl-j = ['join-with down']
ctrl-k = ['join-with up']
ctrl-l = ['join-with right']

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
minus = 'resize smart -64'
equal = 'resize smart +64'
shift-minus = 'resize smart -128'
shift-equal = 'resize smart +128'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
1 = 'workspace 1'
2 = 'workspace 2'
3 = 'workspace 3'
4 = 'workspace 4'
5 = 'workspace 5'
6 = 'workspace 6'
7 = 'workspace 7'
8 = 'workspace 8'
9 = 'workspace 9'
0 = 'workspace 10'
q = 'workspace q'
w = 'workspace w'
e = 'workspace e'
r = 'workspace r'
t = 'workspace pw'

u = 'workspace prev'
i = 'workspace next'
shift-u = 'move-node-to-workspace prev'
shift-i = 'move-node-to-workspace next'
p = ['focus-monitor prev', 'move-mouse window-force-center']
n = ['focus-monitor next', 'move-mouse window-force-center']
shift-p = 'move-workspace-to-monitor prev'
shift-n = 'move-workspace-to-monitor next'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
shift-1 = 'move-node-to-workspace 1'
shift-2 = 'move-node-to-workspace 2'
shift-3 = 'move-node-to-workspace 3'
shift-4 = 'move-node-to-workspace 4'
shift-5 = 'move-node-to-workspace 5'
shift-6 = 'move-node-to-workspace 6'
shift-7 = 'move-node-to-workspace 7'
shift-8 = 'move-node-to-workspace 8'
shift-9 = 'move-node-to-workspace 9'
shift-0 = 'move-node-to-workspace 10'
shift-q = 'move-node-to-workspace q'
shift-w = 'move-node-to-workspace w'
shift-e = 'move-node-to-workspace e'
shift-r = 'move-node-to-workspace r'
shift-t = 'move-node-to-workspace pw'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
tab = 'workspace-back-and-forth'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
shift-tab = 'move-workspace-to-monitor --wrap-around next'

# shift-r = ['flatten-workspace-tree'] # reset layout
opt-f = ['flatten-workspace-tree']   # reset layout
f = ['fullscreen']                   # Toggle between fullscreen
shift-f = ['layout floating tiling'] # Toggle between floating and tiling layout

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
g = [
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode execute',
    'mode execute',
]
a = [ # "adjust", but "a" is already the abbreviation for "alt" mode
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode resize',
    'mode resize',
]
s = [
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode workspace',
    'mode workspace',
]

[mode.resize.binding]
ctrl-f10 = [ # "adjust", but "a" is already the abbreviation for "alt" mode
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode resize',
    'mode alt',
]
esc = [
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode main',
    'mode main',
]
a = [ # "adjust", but "a" is already the abbreviation for "alt" mode
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode resize',
    'mode alt',
]
h = ['resize width -64']
j = ['resize height -64']
k = ['resize height +64']
l = ['resize width +64']
shift-h = ['resize width -8']
shift-j = ['resize height -8']
shift-k = ['resize height +8']
shift-l = ['resize width +8']

[mode.workspace.binding]
ctrl-f10 = [ # "adjust", but "a" is already the abbreviation for "alt" mode
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode resize',
    'mode alt',
]
esc = [
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode main',
    'mode main',
]
s = [ # "adjust", but "a" is already the abbreviation for "alt" mode
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode resize',
    'mode alt',
]

h = ['workspace prev']
l = ['workspace next']
j = ['focus-monitor next']
k = ['focus-monitor prev']
shift-h = ['move-node-to-workspace prev']
shift-l = ['move-node-to-workspace next']
shift-k = ['move-node-to-monitor prev']
shift-j = ['move-node-to-monitor next']

# Move the specified workspace to the next monitor
shift-1 = ['move-workspace-to-monitor --workspace 1 --wrap-around next']
shift-2 = ['move-workspace-to-monitor --workspace 2 --wrap-around next']
shift-3 = ['move-workspace-to-monitor --workspace 3 --wrap-around next']
shift-4 = ['move-workspace-to-monitor --workspace 4 --wrap-around next']
shift-5 = ['move-workspace-to-monitor --workspace 5 --wrap-around next']
shift-6 = ['move-workspace-to-monitor --workspace 6 --wrap-around next']
shift-7 = ['move-workspace-to-monitor --workspace 7 --wrap-around next']
shift-8 = ['move-workspace-to-monitor --workspace 8 --wrap-around next']
shift-9 = ['move-workspace-to-monitor --workspace 9 --wrap-around next']
shift-0 = ['move-workspace-to-monitor --workspace 10 --wrap-around next']
shift-q = ['move-workspace-to-monitor --workspace q --wrap-around next']
shift-w = ['move-workspace-to-monitor --workspace w --wrap-around next']
shift-e = ['move-workspace-to-monitor --workspace e --wrap-around next']
shift-r = ['move-workspace-to-monitor --workspace r --wrap-around next']
shift-t = ['move-workspace-to-monitor --workspace pw --wrap-around next']

# Execute mode - run commands, open apps, etc
[mode.execute.binding]
ctrl-f10 = [ # "adjust", but "a" is already the abbreviation for "alt" mode
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode resize',
    'mode alt',
]
esc = [
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode main',
    'mode main',
]
g = [ # "adjust", but "a" is already the abbreviation for "alt" mode
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode resize',
    'mode alt',
]

# Open a new Terminal.app window
# via <https://nikitabobko.github.io/AeroSpace/goodies#open-a-new-window-with-applescript>
t = [
    '''exec-and-forget osascript -e '
tell application "Terminal"
    do script
    activate
end tell'
''',
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode main',
    'mode main',
]

# Open a new Firefox window
x = [
    'exec-and-forget open -na "Firefox" --args --new-window',
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode main',
    'mode main',
]

# Open a new VS Code window
v = [
    'exec-and-forget open -na "Visual Studio Code" --args --new-window',
    'exec-and-forget ${HOME}/.dhd/opt/bin/aerospace-display-mode main',
    'mode main',
]

#
# Application-specific configurations (optional)
#

# Quick access modal, always uses `Quick Access` for title string.
[[on-window-detected]]
if.app-id = "com.1password.1password"
if.window-title-regex-substring = "^Quick Access"
run = "layout floating"

# Any other 1Password window should go to the 1p workspace
# You really want this on its own workspace because when the secure text entry is focused,
# all hotkeys are disabled.
[[on-window-detected]]
if.app-id = "com.1password.1password"
run = ["layout floating", "move-node-to-workspace pw"]

[[on-window-detected]]
if.app-id = "com.apple.ActivityMonitor"
run = ["move-node-to-workspace 3"]

[[on-window-detected]]
if.app-id = "org.hammerspoon.Hammerspoon"
if.window-title-regex-substring = "^Hammerspoon Console"
run = ["move-node-to-workspace 3"]

[[on-window-detected]]
if.app-id = "org.deskflow.deskflow"
run = ["move-node-to-workspace 3"]
