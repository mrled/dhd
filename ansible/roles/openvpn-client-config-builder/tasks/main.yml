---

- name: Determine VPN server IP
  nslookup: hostname="{{ openvpn_server_name }}"
  register: openvpn_server

- name: Show VPN server IP
  debug: msg="IP address for '{{ openvpn_server.hostname }}' is '{{ openvpn_server.ipaddress }}'"

- name: Empty openvpn_client_config_dir
  file: path="{{ openvpn_client_config_dir }}" state=absent

- name: Make openvpn_client_config_dir
  file: >
    path="{{ openvpn_client_config_dir }}" 
    state=directory mode=0700

- name: Create OpenVPN client config - normal
  template: >
    src=client.normal.ovpn.j2 
    dest="{{ openvpn_client_config_dir }}/younix.ovpn" 

- name: Create OpenVPN client config - hardened for Linux
  template: >
    src=client.hardened.ovpn.j2 
    dest="{{ openvpn_client_config_dir }}/younix-hardened.ovpn" 

- name: Copy hardened route script
  template: >
    src=route-up.sh
    dest="{{ openvpn_client_config_dir }}/{{ openvpn_hardened_route_script_name }}" 

- name: Copy hardened ip rules script
  template: >
    src=ip-rules.sh
    dest="{{ openvpn_client_config_dir }}/{{ openvpn_hardened_ip_rules_script_name }}" 

- name: Copy hardened installer script
  template: >
    src=install-hardened-client.sh
    dest="{{ openvpn_client_config_dir }}/{{ openvpn_hardened_installer_script_name }}" 

- name: Copy hardened sysctl config file
  template: >
    src=sysctl-disable-ipv6.conf
    dest="{{ openvpn_client_config_dir }}/{{ openvpn_hardened_sysctl_conf_name }}" 

- name: Copy hardened dhclient config hook
  template: >
    src=dhclient-preserve-resolveconf
    dest="{{ openvpn_client_config_dir }}/{{ openvpn_hardened_resolv_conf_name }}" 

- name: Copy hardened README
  template: >
    src=README.HARDENED
    dest="{{ openvpn_client_config_dir }}/README.HARDENED" 

- name: Create archive
  shell: bash -c "zip -j \"{{ openvpn_client_config_dir }}/clientconfig.zip\" \"{{ openvpn_client_config_dir }}/*\""
