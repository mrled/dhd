#!/bin/sh

set -e

if test $SCRDEBUG; then
    debugprint() { echo "DEBUG: $@"; }
    set -x
else
    debugprint() { true; }
fi

set -u

debugprint "Debugging enabled"

usage() {
    cat <<ENDUSAGE
scr() [-h|--help] [-r|--remote <REMOTE HOST>] [-w|--whatif]
      [SESSION NAME] [-- <SSH ARGUMENTS>]

Screen session management wrapper
Attach to session if it exists, otherwise create a new one

ARGUMENTS
    -h: Print help and exit.
    -r <REMOTE HOST>: connect to a screen session on a remote host.
    -w: Do not actually execute screen or ssh
    SESSION NAME: provide an optional session name. Default is 'camelot'.
        It is recommended to use the default until you need more than one
        session on a given host.
    --: Indicates that all remaining arguments should be passed to ssh.
        For example: scr -r example.com -- -i ~/.ssh/special_id_rsa

ENVIRONMENT
    SCRDEBUG: If set, print debugging messages
ENDUSAGE
}

actr=0
remote=
whatif=
fallbacksessionname=SCRSESSION
sessionname=
sshargs=
remainingsshargs=

while test $actr -lt $#; do
    debugprint "Processing argument '$1'..."
    case "$1" in
        -h | --help ) usage; exit 0;;
        -r | --remote )
            remote=1; rhost=$2; actr=$((actr+=2)); shift 2;;
        -w | --whatif )
            whatif=1
            actr=$((atr+=1))
            shift;;
        --)
            debugprint "Found -- argument, passing remaining arguments to SSH"
            remainingsshargs=1; shift; actr=$((actr+=1)); break;;
        *)
            if test "$remainingsshargs"; then
                sshargs="${sshargs} \"$1\""
            elif test $(echo $1 | cut -c1) = "-"; then
                echo "Error: Supplied invalid option '$1' (and the -- argument was not present to indicate that '$1' should be passed to SSH)"
                usage
                exit 1
            elif test "$sessionname"; then
                echo "Error: Supplied positional argument '$1', but had already passed a positional argument '$sessionname' (and the -- argument was not present to indicate that '$1' should be passed to SSH"
                usage
                exit 1
            else
                sessionname=$1
            fi
            actr=$((actr+=1)); shift;;
    esac
done

if test -z "$sessionname"; then
    if test "$SCR_DEFAULT_SESSION"; then
        sessionname="$SCR_DEFAULT_SESSION"
    else
        sessionname="$fallbacksessionname"
    fi
fi
debugprint "Session name: $sessionname"

# if you're in a screen session and creating a new one, use a different escape key (handy)
if test $TERM = "screen"; then
    # -e :: changes the screen escape key. NOT set in .screenrc! otherwise that *sometimes* overrides cli option (bug?)
    scrargs="-e^]]"
else
    scrargs="-e^tt"
fi
debugprint "Using scrargs: ${scrargs}"

screen_call="screen $scrargs -D -R -S $sessionname"
debugprint "Calling screen like: $screen_call"
if test $remote; then
    debugprint ssh $sshargs -t $rhost "$screen_call"
    if test ! $whatif; then
        ssh $sshargs -t $rhost "$screen_call"
    fi
else
    debugprint $screen_call
    if test ! $whatif; then
        $screen_call
    fi
fi
