#!/bin/sh

set -e
set -u

cmdname=`basename "$0"`

usage() {
    cat <<ENDUSAGE
Usage: $cmdname [-h] [-d] [-x <FILE>] [URL]
Get a video using youtube-dl and save metadata

ARGUMENTS
    -h | --help:    Print help and exit
    -d | --debug:   Show debug messages
    -t | --txt:     Use an txt file containing URLs, one per line
    -x | --xml:     Use an XML/HTML file containing URLs
    URL:            The URL to download
ENDUSAGE
}

ytdl_internal() {
    echo "==== $1 ===="
    tmpjson="tmp.json"
    youtube-dl --no-check-certificate --dump-json "$1" > "$tmpjson"

    # cut file name to some max
    full_filename=$(jq -r ._filename < "$tmpjson")
    filename=$(echo "${full_filename}" | cut -c 1-92)
    if test "$filename" != "${full_filename}"; then
    ext="${full_filename##*.}"
    filename="${filename}.${ext}"
    fi

    mv "$tmpjson" "${filename}.youtube-dl.json"
    youtube-dl --no-check-certificate "$1" -o "$filename"
}

while test $# -gt 0; do
    case "$1" in
        -h | --help )   usage; exit 0;;
        -d | --debug )  set -x; shift;;
    -t | --txt)
        while read url; do
        ytdl_internal "$url" || echo "$url" >> "$2.failed.urls.txt"
        done < "$2"
        shift 2;;
    -x | --xml)
        lynx -dump -listonly -nonumbers "$2" | while read url; do
        ytdl_internal "$url" || echo "$url" >> "$2.failed.urls.txt"
        done
        shift 2;;
    *) ytdl_internal "$1"; shift;;
    esac
done
