#!/bin/sh

set -e
set -u

usage() {
    cat <<ENDUSAGE
fingerprint() [REMOTE_HOSTNAME ...]
    REMOTE_HOSTNAME: get fingerprints for this remote host

Print the public key fingerprints for the SSH server
ENDUSAGE
}

getkeysstr=$'
for key in $(ls $HOME/.ssh/*.pub /etc/ssh/*.pub /etc/ssh_host*key.pub 2>/dev/null || true); do
    echo "  $key"
    # If ssh-keygen supports the -E argument, print both sha256 and md5 hashes
    if ssh-keygen -E sha256 -lf "$key" >/dev/null 2>&1; then
        printf "    "
        ssh-keygen -E md5 -lf "$key" || true
        printf "    "
        ssh-keygen -E sha256 -lf "$key" || true
    else
        printf "    "
        ssh-keygen -lf "$key"
    fi
done
'

# If the argument begins with a dash, assume the user is either passing
# some option we don't support, or -h
for arg in "$@"; do
    if test "${arg:0:1}" = "-"; then usage; exit; fi
done

echo "Local keys:"
# This doesn't work with 'eval', so we just pipe it through another sh
echo "$getkeysstr" | sh


# If we haven't been passed a help option, assume all options are hostnames (or
# user@hostname strings):
for host in "$@"; do
    echo "Remote keys on $host:"
    ssh -Tq "$host" "$getkeysstr"
done
